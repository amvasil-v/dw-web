name: Deploy Rust wasm application on GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  BUILD_PATH: "."
  WWW_PATH: "./www"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Setup wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: 'latest'
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "19"
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Build wasm application
        run: wasm-pack build
        working-directory: ${{ env.BUILD_PATH }}
      - name: Install node dependencies
        run: npm install
        working-directory: ${{ env.WWW_PATH }}
      - name: Build node dependencies
        run: npm run build
        working-directory: ${{ env.WWW_PATH }}
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ${{ env.WWW_PATH }}
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
